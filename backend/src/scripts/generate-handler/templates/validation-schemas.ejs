import Joi from 'joi';

import { <%= handlerName %>Output, <%= handlerName %>Payload } from '../types/<%= handlerName %>';

export const <%= handlerName %>PayloadSchema = Joi.object<<%= handlerName %>Payload>({
  <% function renderProperties(properties) { %>
    <% properties.forEach(function(prop, index) { %>
      <% const nextProp = properties[index + 1]; %>
      <% if (prop.type === 'array') { %>
        <%= prop.name %>: Joi.array().items(
          <% if (prop.items.type === 'array') { %>
            <%= renderArrayItems(prop.items) %>
          <% } else if (prop.items.type === 'object') { %>
            Joi.object({
              <% renderProperties(prop.items.properties) %>
            })
          <% } else { %>
            Joi.<%= prop.items.type %>()<%= !prop.items.required ? '.optional()' : '.required()' %><%- prop.items.allowEmpty ? ".allow('')" : '' %>
          <% } %>
        )<%= !prop.required ? '.optional()' : '.required()' %><%= nextProp ? ',' : '' %>
      <% } else if (prop.type === 'object') { %>
        <%= prop.name %>: Joi.object({
          <% renderProperties(prop.properties) %>
        })<%= !prop.required ? '.optional()' : '.required()' %><%= nextProp ? ',' : '' %>
      <% } else { %>
        <%= prop.name %>: Joi.<%= prop.type %>()<%= !prop.required ? '.optional()' : '.required()' %><%- prop.allowEmpty ? ".allow('')" : '' %><%= nextProp ? ',' : '' %>
      <% } %>
    <% }); %>
  <% } %>

  <% function renderArrayItems(items) { %>
    <% if (items.type === 'array') { %>
      Joi.array().items(<%= renderArrayItems(items.items) %>)
    <% } else if (items.type === 'object') { %>
      Joi.object({
        <% renderProperties(items.properties) %>
      })
    <% } else { %>
      Joi.<%= items.type %>()<%= !items.required ? '.optional()' : '.required()' %><%- items.allowEmpty ? ".allow('')" : '' %>
    <% } %>
  <% } %>

  <% renderProperties(payload.properties) %>
}).unknown(false);

export const <%= handlerName %>OutputSchema = Joi.object<<%= handlerName %>Output>({
  <% function renderProperties(properties) { %>
    <% properties.forEach(function(prop, index) { %>
      <% const nextProp = properties[index + 1]; %>
      <% if (prop.type === 'array') { %>
        <%= prop.name %>: Joi.array().items(
          <% if (prop.items.type === 'array') { %>
            <%= renderArrayItems(prop.items) %>
          <% } else if (prop.items.type === 'object') { %>
            Joi.object({
              <% renderProperties(prop.items.properties) %>
            })
          <% } else { %>
            Joi.<%= prop.items.type %>()<%= !prop.items.required ? '.optional()' : '.required()' %><%- prop.items.allowEmpty ? ".allow('')" : '' %>
          <% } %>
        )<%= !prop.required ? '.optional()' : '.required()' %><%= nextProp ? ',' : '' %>
      <% } else if (prop.type === 'object') { %>
        <%= prop.name %>: Joi.object({
          <% renderProperties(prop.properties) %>
        })<%= !prop.required ? '.optional()' : '.required()' %><%= nextProp ? ',' : '' %>
      <% } else { %>
        <%= prop.name %>: Joi.<%= prop.type %>()<%= !prop.required ? '.optional()' : '.required()' %><%- prop.allowEmpty ? ".allow('')" : '' %><%= nextProp ? ',' : '' %>
      <% } %>
    <% }); %>
  <% } %>

  <% function renderArrayItems(items) { %>
    <% if (items.type === 'array') { %>
      Joi.array().items(<%= renderArrayItems(items.items) %>)
    <% } else if (items.type === 'object') { %>
      Joi.object({
        <% renderProperties(items.properties) %>
      })
    <% } else { %>
      Joi.<%= items.type %>()<%= !items.required ? '.optional()' : '.required()' %><%- items.allowEmpty ? ".allow('')" : '' %>
    <% } %>
  <% } %>

  <% renderProperties(output.properties) %>
}).unknown(false);
