/* 
!!!! Copy out the below for new or updated API

import { ResultError, ResultSuccess } from '@infra/Result';
import { <%= handlerName %>Payload, } from '@shared/api/gen/<%= domainName %>/types/<%= handlerName %>';

import { Abstract<%= handlerName %>Handler } from './gen/<%= apiVerb %>Abstract<%= handlerName %>Handler';
<% errors.forEach(function(error, index) { %>
import {<%= error.errorName %>} from './gen/<%= apiVerb %>/errors/<%= error.errorName %>'
<% }); %>

export class <%= handlerName %>Handler extends Abstract<%= handlerName %>Handler {
  protected async getResult(payload: <%= handlerName %>Payload) {
    return new ResultSuccess();
  }
}
*/

import {
    <%= handlerName %>OutputSchema,
    <%= handlerName %>PayloadSchema,
} from '@shared/api/gen/<%= domainName %>/schemas/<%= handlerName %>Schemas';
import {
    <%= handlerName %>ErrorCodes,
    <%= handlerName %>Output,
    <%= handlerName %>Payload,
} from '@shared/api/gen/<%= domainName %>/types/<%= handlerName %>';

import { BaseHandler } from '../../BaseHandler';

export abstract class Abstract<%= handlerName %>Handler extends BaseHandler<<%= handlerName %>Payload, <%= handlerName %>Output> {
  constructor() {
    super(<%= handlerName %>PayloadSchema, <%= handlerName %>OutputSchema, <%= handlerName %>ErrorCodes<%= authRequired ? '' : ', false' %>);
  }
}